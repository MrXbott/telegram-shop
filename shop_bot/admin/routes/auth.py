from flask import render_template, request, redirect, url_for, flash
from flask_login import login_user, logout_user, current_user
from werkzeug.security import check_password_hash, generate_password_hash
from sqlalchemy import select
import logging

from . import routes_bp
from db.models import Admin
from db.init import sync_session
from forms.passwords import ChangePasswordForm

logger = logging.getLogger(__name__)

@routes_bp.route('/login/', methods=['GET', 'POST'])
def login():
    if current_user.is_authenticated:
        logger.debug(f'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: {current_user.username}')
        return redirect(url_for('admin.admin_main'))  
    
    if request.method == 'POST':
        with sync_session() as session:
            admin = session.scalar(select(Admin).where(Admin.username==request.form['username']))
            if admin and check_password_hash(admin.password, request.form['password']) and admin.is_active:
                login_user(admin)
                logger.info(f'‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥: {admin.username}')
                return redirect(url_for('admin.admin_main'))
            
            logger.warning(f'‚ùå –ù–µ—É–¥–∞—á–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞: {admin.username}')
            flash('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
    return render_template('login.html')

@routes_bp.route('/logout')
def logout():
    if current_user.is_authenticated:
        logger.info(f'üëã –í—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {current_user.username}')
        logout_user()
    return redirect(url_for('admin.login'))

@routes_bp.route('/change-password/', methods=['GET', 'POST'])
def change_password():
    form = ChangePasswordForm()

    if form.validate_on_submit():
        if not check_password_hash(current_user.password, form.current_password.data):
            logger.warning(f'üîê –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è: {current_user.username}')
            form.current_password.errors.append('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å')
        else:
            current_user.password = generate_password_hash(form.new_password.data)
            with sync_session() as session: 
                session.add(current_user)
                session.commit()
            logger.info(f'üîÅ –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω: {current_user.username}')
            flash('–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —Å–Ω–æ–≤–∞.')
            logout_user()
            return redirect(url_for('admin.login'))

    logger.debug(f'üõ† –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {current_user.username}')
    return render_template('change_password.html', form=form)
    
