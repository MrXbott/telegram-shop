from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession
from typing import List
import logging

import keyboards.user_kb as kb
from db import crud, cart
from db.cart import ProductInCart


logger = logging.getLogger(__name__)
router = Router()


@router.callback_query(F.data == 'place_an_order')
async def place_an_order(callback: CallbackQuery, session: AsyncSession):
    user_id = callback.from_user.id
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—á–∞–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞')
    products: List[ProductInCart] = await cart.get_cart(session, user_id)
    
    if not products:
        await callback.answer('‚ö†Ô∏èüõí –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑: –≤–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.')
        return
    
    order = await crud.create_order(session, user_id)
    if order:
        await cart.clear_cart(user_id)
        await callback.message.answer(f'‚úÖ –ó–∞–∫–∞–∑ ‚Ññ{order.id} –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.')
        logger.info(f'‚úÖüì¶ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ñ–æ—Ä–º–∏–ª –∑–∞–∫–∞–∑ ‚Ññ{order.id}')
    else:
        await callback.message.answer(f'‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
        logger.warning(f'‚ùåüì¶ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–µ —Å–º–æ–≥ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑')

@router.message(F.text.in_(['/orders', 'üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã']))
async def show_orders(message: Message, session: AsyncSession):
    await message.answer('–ó–¥–µ—Å—å –±—É–¥—É—Ç –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã.')